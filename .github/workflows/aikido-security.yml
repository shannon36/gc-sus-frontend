#Source obtained from:
#https://github.com/marketplace/actions/aikido-security-github-action
#workflow for code scanning only

name: Aikido Security
on:
  pull_request:
    branches:
      - '*'
permissions: write-all
jobs:
  aikido-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect new vulnerabilities
        uses: AikidoSec/github-actions-workflow@v1.0.13
        with:
            secret-key: ${{ secrets.AIKIDO_SECRET_KEY }}
            fail-on-timeout: true
            fail-on-dependency-scan: true
            fail-on-sast-scan: false
            fail-on-iac-scan: false
            minimum-severity: 'CRITICAL'
            timeout-seconds: 180
            post-scan-status-comment: 'off'
            post-sast-review-comments: 'off'
            file: package-lock.json 
            github-token: ${{ secrets.GITHUB_TOKEN }}

      #format: sarif               # Specify output format as SARIF
      #output: aikido-results.sarif # Name of the SARIF results file

      #- name: Upload SARIF results
      #  if: always()
      #  uses: github/codeql-action/upload-sarif@v3
      #  with:
      #    sarif_file: aikido-results.sarif

      #- name: Run Snyk to check for vulnerabilities
      #  uses: snyk/actions/maven-3-jdk-17@master
      #  continue-on-error: true # To make sure that SARIF upload gets called
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #  with:
      #    args: --sarif-file-output=snyk.sarif --file=./backend_nus/pom.xml
      #- name: Create SARIF directory and move SARIF files
      #  run: |
      #    mkdir sarif_files &&
      #    mv snyk.sarif sarif_files/
      #- name: Upload result to GitHub Code Scanning
      #  uses: github/codeql-action/upload-sarif@v3
      #  with:
      #    sarif_file: sarif_files
