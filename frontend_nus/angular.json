{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "nusiss-smartcart": {
      "projectType": "application",
      "schematics": {},
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/nusiss-smartcart",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/@fortawesome/fontawesome-free/css/all.min.css"
            ],
            "scripts": [
              "node_modules/@popperjs/core/dist/umd/popper.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ],
            "allowedCommonJsDependencies": [
              "crypto-js",
              "buffer",
              "js-cookie",
              "zen-observable",
              "axios",
              "uuid",
              "events",
              "xstate/lib/waitFor.js",
              "style-dictionary/lib/utils/deepExtend.js",
              "style-dictionary/lib/utils/flattenProperties.js",
              "style-dictionary/lib/utils/references/usesReference.js",
              "cookie",
              "ulid",
              "zen-push",
              "lodash",
              "url",
              "isomorphic-unfetch",
              "crypto-js/lib-typedarrays",
              "crypto-js/hmac-sha256",
              "crypto",
              "camelcase-keys",
              "xstate/lib/actions",
              "style-dictionary/lib/utils/deepExtend",
              "style-dictionary/lib/utils/flattenProperties",
              "style-dictionary/lib/utils/references/usesReference"
            ]
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "src/app/env/env.ts",
                  "with": "src/app/env/env.prod.ts"
                }
              ],
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "700kb",
                  "maximumError": "1.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "3kb",
                  "maximumError": "5kb"
                }
              ],
              "optimization": true,
              "buildOptimizer": true,
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "nusiss-smartcart:build:production"
            },
            "development": {
              "browserTarget": "nusiss-smartcart:build:development"
            }
          },
          "options": {
            "disableHostCheck": true
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "nusiss-smartcart:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/@fortawesome/fontawesome-free/css/all.min.css"
            ],
            "scripts": [
              "node_modules/@popperjs/core/dist/umd/popper.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]
          }
        }
      }
    }
  },
  "cli": {
    "analytics": "8a7896ca-4e87-41a8-840b-e31c5aa67db5"
  }
}
